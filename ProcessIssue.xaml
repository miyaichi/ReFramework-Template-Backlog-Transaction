<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessIssue"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionItem" Type="InArgument(sd:DataRow)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessIssue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="課題を処理します。&#xA;・課題の情報は変数IssueにJsonオブジェクトとして格納されます。&#xA;  取得できる情報の内容は、下記を参照ください。&#xA;  https://developer.nulab-inc.com/ja/docs/backlog/api/2/get-issue/&#xA;・BRE(BusinessRuleException)に相当する場合、BREをThrowせず、Backlogの課題を前任者に戻すようにします。&#xA;・処理が終了した場合は、AssigneeIdに後任者のIDをセットします。&#xA;・CommentにはBacklogに投稿するコメント（課題の処理完了、差し戻しなどのステータス、申し送り事項）をセットします。" DisplayName="ProcessIssue" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="AdvanceIssue" />
      <Variable x:TypeArguments="njl:JObject" Name="Issue" />
      <Variable x:TypeArguments="x:String" Name="AssigneeId" />
      <Variable x:TypeArguments="x:String" Name="Comment" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_6">
        <Sequence sap2010:Annotation.AnnotationText="課題情報を取得する。添付ファイルがあれば、作業用フォルダにダウンロードする。" DisplayName="Get Issue" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="Attachments" />
            <Variable x:TypeArguments="x:Boolean" Name="Exists" />
          </Sequence.Variables>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get Issue Data workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Backlog\Get Issue Data.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="SpaceName">[in_Config("Backlog_SpaceName").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="APIKey">[in_Config("Backlog_APIKey").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="IssueId">[in_TransactionItem("id").ToString]</InArgument>
              <OutArgument x:TypeArguments="njl:JObject" x:Key="IssueData">[Issue]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:PathExists DisplayName="Path Exists" Exists="[Exists]" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[in_Config(&quot;Backlog_WorkFolder&quot;).ToString]" PathType="Folder" />
          <If Condition="[Exists]" DisplayName="Clean up work folder" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="{x:Null}" DisplayName="Clean up work files" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[New DirectoryInfo(in_Config(&quot;Backlog_WorkFolder&quot;).ToString).GetFiles(&quot;*.*&quot;)]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="si:FileInfo">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="si:FileInfo" Name="FileInfo" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Remove" />
                      <ui:Delete ContinueOnError="{x:Null}" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[FileInfo.FullName]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </If.Then>
            <If.Else>
              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create work folder" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[in_Config(&quot;Backlog_WorkFolder&quot;).ToString]" />
            </If.Else>
          </If>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Get Attachments workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Backlog\Get Attachments.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="SpaceName">[in_Config("Backlog_SpaceName").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="APIKey">[in_Config("Backlog_APIKey").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="IssueId">[in_TransactionItem("id").ToString]</InArgument>
              <OutArgument x:TypeArguments="sd:DataTable" x:Key="Attachments">[Attachments]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[Attachments]" DisplayName="Download attachments" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Attachment" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="Download" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Download Attachment workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Backlog\Download Attachment.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="SpaceName">[in_Config("Backlog_SpaceName").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="APIKey">[in_Config("Backlog_APIKey").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="IssueId">[in_TransactionItem("id").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="AttachmentId">[Attachment("id").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="Name">[Environment.CurrentDirectory + "\" + in_Config("Backlog_WorkFolder").ToString + "\" + Attachment("name").ToString]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
          </ui:ForEachRow>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_5">
            <Sequence sap2010:Annotation.AnnotationText="処理に必要な情報を取得する" DisplayName="Parse Issue" sap2010:WorkflowViewState.IdRef="Sequence_2" />
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                <Sequence sap2010:Annotation.AnnotationText="取得した情報をチェックし、処理できないものであれば、前任者に差し戻す" DisplayName="Check Data" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[AdvanceIssue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID4" Condition="[AdvanceIssue]" DisplayName="処理可能か" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                        <Sequence sap2010:Annotation.AnnotationText="課題を処理する" DisplayName="Do Issue" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[AdvanceIssue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowDecision x:Name="__ReferenceID6" Condition="[AdvanceIssue]" DisplayName="処理完了か" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                            <FlowDecision.True>
                              <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                <Sequence sap2010:Annotation.AnnotationText="課題を後任者に進める" DisplayName="Advance Case" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="StatusId" />
                                  </Sequence.Variables>
                                  <Assign DisplayName="状態：処理済み" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[StatusId]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">3</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comment]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">処理しました</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Update Issue workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Backlog\Update Issue.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="SpaceName">[in_Config("Backlog_SpaceName").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="APIKey">[in_Config("Backlog_APIKey").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IssueID">[in_TransactionItem("id").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Summary" />
                                      <InArgument x:TypeArguments="x:String" x:Key="ParentIssueId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="Description" />
                                      <InArgument x:TypeArguments="x:String" x:Key="StatusId">[StatusId]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ResolutionId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="StartDate" />
                                      <InArgument x:TypeArguments="x:String" x:Key="DueDate" />
                                      <InArgument x:TypeArguments="x:String" x:Key="EstimatedHours" />
                                      <InArgument x:TypeArguments="x:String" x:Key="ActualHours" />
                                      <InArgument x:TypeArguments="x:String" x:Key="IssueTypeId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="CategoryIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="VersionIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="MilestoneIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="PriorityId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="AssigneeId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="NotifiedUserIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="AttachmentIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="Comment">[Comment]</InArgument>
                                      <OutArgument x:TypeArguments="njl:JObject" x:Key="IssueData" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </FlowStep>
                            </FlowDecision.True>
                            <FlowDecision.False>
                              <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                                <Sequence sap2010:Annotation.AnnotationText="課題を前任者に差し戻す" DisplayName="Remand Case" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="StatusId" />
                                    <Variable x:TypeArguments="x:String" Name="ResolutionId" />
                                  </Sequence.Variables>
                                  <Assign DisplayName="課題の担当者：最終更新者" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[AssigneeId]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Issue("updatedUser")("id").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="状態：未対応" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[StatusId]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">1</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[Comment]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">差し戻します</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Update Issue workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Backlog\Update Issue.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="SpaceName">[in_Config("Backlog_SpaceName").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="APIKey">[in_Config("Backlog_APIKey").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="IssueID">[in_TransactionItem("id").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Summary" />
                                      <InArgument x:TypeArguments="x:String" x:Key="ParentIssueId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="Description" />
                                      <InArgument x:TypeArguments="x:String" x:Key="StatusId">[StatusId]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ResolutionId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="StartDate" />
                                      <InArgument x:TypeArguments="x:String" x:Key="DueDate" />
                                      <InArgument x:TypeArguments="x:String" x:Key="EstimatedHours" />
                                      <InArgument x:TypeArguments="x:String" x:Key="ActualHours" />
                                      <InArgument x:TypeArguments="x:String" x:Key="IssueTypeId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="CategoryIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="VersionIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="MilestoneIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="PriorityId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="AssigneeId" />
                                      <InArgument x:TypeArguments="x:String" x:Key="NotifiedUserIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="AttachmentIds" />
                                      <InArgument x:TypeArguments="x:String" x:Key="Comment">[Comment]</InArgument>
                                      <OutArgument x:TypeArguments="njl:JObject" x:Key="IssueData" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </FlowStep>
                            </FlowDecision.False>
                          </FlowDecision>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d2dDOlxVc2Vyc1xZb3NoaWhpa28gTWl5YWljaGlcRG9jdW1lbnRzXFVpUGF0aFxSZUZyYW1ld29yay1UZW1wbGF0ZS1CYWNrbG9nLVRyYW5zYWN0aW9uXFByb2Nlc3NJc3N1ZS54YW1sUk8DvgIPAgEBWAmXARQCAT2aAQ2aAZIBAgE8nQERpgEcAgE3qAFDqAFTAgE17AEhowIsAgEdqwEZtAEkAgEYtgFLtgFbAgEWuQEh5wEsAgECXQtkIwIBaWULZcUBAgFkZgt5EAIBVnoLgQEjAgFNggELlgEbAgE+ngETpQEcAgE48QEj+AEsAgEx+QEjgAIsAgEtgQIjiAIsAgEpiQIjogI7AgEerAEbswEkAgEZvQEjxAEsAgESxQEjzAEsAgEOzQEj5gE7AgEDYkxiUwIBcGFGYWkCAW9gRWBrAgFtX0hfcQIBa13BAV3eAQIBamU7ZUUCAWdlemWwAQIBZWYZZiMCAVdoD3QcAgFcdw930QECAVl/T39cAgFUfkZ+aQIBU31FfWsCAVF8SHxxAgFPesIBeuABAgFOggE8ggFLAgFLiAERkwEcAgE/owE/owFDAgE7oAFAoAFOAgE59gFO9gFzAgE08wFP8wFbAgEy/gFO/gFPAgEw+wFP+wFZAgEuhgJOhgJUAgEsgwJPgwJYAgEqjQJejQKBAQIBKJ8CXp8CZwIBJowCXYwCgwECASSLAmCLAokBAgEikQJfkQJpAgEgiQLXAYkC8gECAR+xAUexAUsCARyuAUiuAVYCARrCAU7CAU8CARW/AU+/AVkCARPKAU7KAVQCARHHAU/HAVgCAQ/RAV7RAYEBAgEN4wFe4wFnAgEL0AFd0AGDAQIBCc8BYM8BiQECAQfVAV/VAWkCAQXNAdcBzQHyAQIBBGioAWiLAgIBY24VcSACAV13mAF3zgECAVqJAROJAXcCAUmKAROSASsCAUBvF295AgFhcBdwhQECAV6JAWqJAXQCAUqOAU6OAXECAUiNAU2NAXMCAUaPAVOPAW4CAUWMAVCMAXkCAUOKAc4BigHwAQIBQpABS5ABvgECAUFvbm92AgFicG1wggECAV8=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="PathExists_1" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="Delete_1" sap:VirtualizedContainerService.HintSize="210,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="232,248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WriteLine_5" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="336,313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="336,658">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="200,112">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,1011</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">190,644 190,694</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,1011</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">200,654 200,704</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">165,851</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">165,894.5 100,894.5 100,1011</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">235,894.5 400,894.5 400,1011</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">100,721</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">200,801 200,851</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,566.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">265,610 200,610 200,721</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">335,610 400,610 400,1011</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,403.5</av:Point>
            <av:Size x:Key="ShapeSize">200,112</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,515.5 300,566.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,273.5</av:Point>
            <av:Size x:Key="ShapeSize">200,80</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,353.5 300,403.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
            <av:Size x:Key="ShapeSize">200,112</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,239.5 300,273.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="614,1267">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
            <x:Double x:Key="Height">1091</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessIssue_1" sap:VirtualizedContainerService.HintSize="654,1347" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>